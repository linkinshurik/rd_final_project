name: Release

on:
  push:
    branches: [main]

env:
  REGISTRY: docker.io/${{ secrets.DOCKERHUB_USER }}

jobs:
  bump-tag-build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.bump.outputs.TAG }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # потрібна історія для tags

    - name: Set up Python & semver
      run: pip install semver==3.0.2

    - name: Get & bump version
      id: bump
      run: |
        VERSION=$(git tag --sort=-v:refname | head -n 1 | sed 's/^v//' || echo "1.0.0")
        NEW_VERSION=$(python3 -c "import semver; print(semver.Version.parse('$VERSION').bump_patch())")
        echo "TAG=$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: Create Git tag
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag v${{ steps.bump.outputs.TAG }}
        git push origin v${{ steps.bump.outputs.TAG }}

    - uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 21

    - name: Build JAR
      run: ./mvnw -B package -DskipTests

    - name: Build & push Docker image
      run: |
        TAG=${{ steps.bump.outputs.TAG }}
        IMAGE=$REGISTRY/petclinic:$TAG
        docker build -t $IMAGE .
        echo "${{ secrets.DOCKERHUB_PWD }}" | docker login -u "${{ secrets.DOCKERHUB_USER }}" --password-stdin
        docker push $IMAGE

  deploy:
    needs: bump-tag-build
    runs-on: ubuntu-latest
    environment:
      name: production
      url: http://<EC2_PUBLIC_IP>:8080

    steps:
    - name: Install ssh-client
      run: sudo apt-get update && sudo apt-get install -y openssh-client

    - name: Add SSH key
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > id_key
        chmod 600 id_key
        mkdir -p ~/.ssh
        echo "StrictHostKeyChecking no" >> ~/.ssh/config

    - name: Deploy container to EC2
      run: |
        TAG=${{ needs.bump-tag-build.outputs.tag }}
        ssh -i id_key ec2-user@<EC2_PUBLIC_IP> "
          docker stop petclinic || true && docker rm petclinic || true
          docker pull $REGISTRY/petclinic:$TAG
          docker run -d --name petclinic -p 8080:8080 \
            -e SPRING_DATASOURCE_URL='jdbc:mysql://${{ secrets.RDS_HOST }}/petclinic' \
            -e SPRING_DATASOURCE_USERNAME=admin \
            -e SPRING_DATASOURCE_PASSWORD='${{ secrets.DB_PWD }}' \
            $REGISTRY/petclinic:$TAG
        "

    - name: Print URL
      run: echo "App deployed at http://<EC2_PUBLIC_IP>:8080 (version ${{ needs.bump-tag-build.outputs.tag }})"
